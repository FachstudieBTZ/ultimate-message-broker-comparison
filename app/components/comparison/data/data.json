[
  {
    "tag": "Apache ActiveMQ - http://activemq.apache.org/",
    "descr": "Apache ActiveMQ is the most popular and powerful open source messaging and Integration Patterns server.",
    "Description": {
      "plain": "Apache ActiveMQ is the most popular and powerful open source messaging and Integration Patterns server.\n\nApache ActiveMQ is fast, supports many Cross Language Clients and Protocols, comes with easy to use Enterprise Integration Patterns and many advanced features while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",
      "childs": {
        "0": [
          "Apache ActiveMQ is the most popular and powerful open source messaging and Integration Patterns server.",
          "Apache ActiveMQ is fast, supports many Cross Language Clients and Protocols, comes with easy to use Enterprise Integration Patterns and many advanced features while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License"
        ]
      }
    },
    "Repo": {
      "plain": "- https://github.com/apache/activemq\n",
      "childs": {
        "0": [
          [
            {
              "content": "https://github.com/apache/activemq",
              "plain": "https://github.com/apache/activemq\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "License": {
      "plain": "- Apache 2.0\n    - [@apacheActiveMQ]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Apache 2.0",
              "plain": "Apache 2.0\n",
              "plainChilds": "    - [@apacheActiveMQ]\n",
              "childs": [
                {
                  "content": ",[@apacheActiveMQ]",
                  "plain": "[@apacheActiveMQ]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Protocol": {
      "plain": "- AMQP\n    - [@apacheActiveMQProtocols]\n- AUTO\n    - [@apacheActiveMQProtocols]\n- MQTT\n    - [@apacheActiveMQProtocols]\n- OpenWire\n    - [@apacheActiveMQProtocols]\n- STOMP\n    - [@apacheActiveMQProtocols]\n",
      "childs": {
        "0": [
          [
            {
              "content": "AMQP",
              "plain": "AMQP\n",
              "plainChilds": "    - [@apacheActiveMQProtocols]\n",
              "childs": [
                {
                  "content": ",[@apacheActiveMQProtocols]",
                  "plain": "[@apacheActiveMQProtocols]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            },
            {
              "content": "AUTO",
              "plain": "AUTO\n",
              "plainChilds": "    - [@apacheActiveMQProtocols]\n",
              "childs": [
                {
                  "content": ",[@apacheActiveMQProtocols]",
                  "plain": "[@apacheActiveMQProtocols]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            },
            {
              "content": "MQTT",
              "plain": "MQTT\n",
              "plainChilds": "    - [@apacheActiveMQProtocols]\n",
              "childs": [
                {
                  "content": ",[@apacheActiveMQProtocols]",
                  "plain": "[@apacheActiveMQProtocols]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            },
            {
              "content": "OpenWire",
              "plain": "OpenWire\n",
              "plainChilds": "    - [@apacheActiveMQProtocols]\n",
              "childs": [
                {
                  "content": ",[@apacheActiveMQProtocols]",
                  "plain": "[@apacheActiveMQProtocols]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            },
            {
              "content": "STOMP",
              "plain": "STOMP\n",
              "plainChilds": "    - [@apacheActiveMQProtocols]\n",
              "childs": [
                {
                  "content": ",[@apacheActiveMQProtocols]",
                  "plain": "[@apacheActiveMQProtocols]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Server Platforms": {
      "plain": "- Linux\n    - [@apacheActiveMQServer]\n- Windows\n    - [@apacheActiveMQServer]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Linux",
              "plain": "Linux\n",
              "plainChilds": "    - [@apacheActiveMQServer]\n",
              "childs": [
                {
                  "content": ",[@apacheActiveMQServer]",
                  "plain": "[@apacheActiveMQServer]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            },
            {
              "content": "Windows",
              "plain": "Windows\n",
              "plainChilds": "    - [@apacheActiveMQServer]\n",
              "childs": [
                {
                  "content": ",[@apacheActiveMQServer]",
                  "plain": "[@apacheActiveMQServer]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Working example": {
      "plain": "- Yes\n    - [@apacheActiveMQExample]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Yes",
              "plain": "Yes\n",
              "plainChilds": "    - [@apacheActiveMQExample]\n",
              "childs": [
                {
                  "content": ",[@apacheActiveMQExample]",
                  "plain": "[@apacheActiveMQExample]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "JMS support": {
      "plain": "- Yes\n    - [@apacheActiveMQJMS]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Yes",
              "plain": "Yes\n",
              "plainChilds": "    - [@apacheActiveMQJMS]\n",
              "childs": [
                {
                  "content": ",[@apacheActiveMQJMS]",
                  "plain": "[@apacheActiveMQJMS]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Broker Backend": {
      "plain": "- None\n",
      "childs": {
        "0": [
          [
            {
              "content": "None",
              "plain": "None\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "Google hits": {
      "plain": "- 1390000\n",
      "childs": {
        "0": [
          [
            {
              "content": "1390000",
              "plain": "1390000\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    }
  },
  {
    "tag": "Apache Apollo - http://activemq.apache.org/apollo/",
    "descr": "ActiveMQ's next generation of messaging.",
    "Description": {
      "plain": "ActiveMQ apollo is a faster, more reliable, easier to maintain messaging broker built from the foundations of the original ActiveMQ. It accomplishes this using a radically different threading and message dispatching architecture. Like ActiveMQ, apollo is a multi-Protocol broker and supports STOMP, AMQP, MQTT, Openwire, SSL, and WebSockets.",
      "childs": {
        "0": [
          "ActiveMQ apollo is a faster, more reliable, easier to maintain messaging broker built from the foundations of the original ActiveMQ. It accomplishes this using a radically different threading and message dispatching architecture. Like ActiveMQ, apollo is a multi-Protocol broker and supports STOMP, AMQP, MQTT, Openwire, SSL, and WebSockets."
        ]
      }
    },
    "Repo": {
      "plain": "- https://github.com/apache/activemq-apollo\n",
      "childs": {
        "0": [
          [
            {
              "content": "https://github.com/apache/activemq-apollo",
              "plain": "https://github.com/apache/activemq-apollo\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "License": {
      "plain": "- Apache 2.0\n    - [@apacheApollo]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Apache 2.0",
              "plain": "Apache 2.0\n",
              "plainChilds": "    - [@apacheApollo]\n",
              "childs": [
                {
                  "content": ",[@apacheApollo]",
                  "plain": "[@apacheApollo]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Server Platforms": {
      "plain": "- Linux\n    - [@apacheApolloServer]    \n- Windows\n    - [@apacheApolloServer]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Linux",
              "plain": "Linux\n",
              "plainChilds": "    - [@apacheApolloServer]    \n",
              "childs": [
                {
                  "content": ",[@apacheApolloServer]",
                  "plain": "[@apacheApolloServer]    \n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            },
            {
              "content": "Windows",
              "plain": "Windows\n",
              "plainChilds": "    - [@apacheApolloServer]\n",
              "childs": [
                {
                  "content": ",[@apacheApolloServer]",
                  "plain": "[@apacheApolloServer]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Protocol": {
      "plain": "- AMQP\n    - [@apacheApollo]\n- MQTT\n    - [@apacheApollo]\n- OpenWire\n    - [@apacheApollo]\n- STOMP\n    - [@apacheApollo]\n",
      "childs": {
        "0": [
          [
            {
              "content": "AMQP",
              "plain": "AMQP\n",
              "plainChilds": "    - [@apacheApollo]\n",
              "childs": [
                {
                  "content": ",[@apacheApollo]",
                  "plain": "[@apacheApollo]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            },
            {
              "content": "MQTT",
              "plain": "MQTT\n",
              "plainChilds": "    - [@apacheApollo]\n",
              "childs": [
                {
                  "content": ",[@apacheApollo]",
                  "plain": "[@apacheApollo]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            },
            {
              "content": "OpenWire",
              "plain": "OpenWire\n",
              "plainChilds": "    - [@apacheApollo]\n",
              "childs": [
                {
                  "content": ",[@apacheApollo]",
                  "plain": "[@apacheApollo]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            },
            {
              "content": "STOMP",
              "plain": "STOMP\n",
              "plainChilds": "    - [@apacheApollo]\n",
              "childs": [
                {
                  "content": ",[@apacheApollo]",
                  "plain": "[@apacheApollo]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Broker Backend": {
      "plain": "- None\n",
      "childs": {
        "0": [
          [
            {
              "content": "None",
              "plain": "None\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "JMS support": {
      "plain": "- No\n",
      "childs": {
        "0": [
          [
            {
              "content": "No",
              "plain": "No\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "Working example": {
      "plain": "- Yes\n    - [@apacheApolloExamples]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Yes",
              "plain": "Yes\n",
              "plainChilds": "    - [@apacheApolloExamples]\n",
              "childs": [
                {
                  "content": ",[@apacheApolloExamples]",
                  "plain": "[@apacheApolloExamples]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Google hits": {
      "plain": "- 660.000\n",
      "childs": {
        "0": [
          [
            {
              "content": "660.000",
              "plain": "660.000\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    }
  },
  {
    "tag": "Apache Kafka - http://kafka.apache.org/",
    "descr": "distributed streaming platform",
    "Description": {
      "plain": "Kafka™ is used for building real-time data pipelines and streaming apps. It is horizontally scalable, fault-tolerant, wicked fast, and runs in production in thousands of companies.",
      "childs": {
        "0": [
          "Kafka™ is used for building real-time data pipelines and streaming apps. It is horizontally scalable, fault-tolerant, wicked fast, and runs in production in thousands of companies."
        ]
      }
    },
    "Repo": {
      "plain": "- https://github.com/apache/kafka\n",
      "childs": {
        "0": [
          [
            {
              "content": "https://github.com/apache/kafka",
              "plain": "https://github.com/apache/kafka\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "License": {
      "plain": "- Apache 2.0\n    - [@apacheKafkaLicense]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Apache 2.0",
              "plain": "Apache 2.0\n",
              "plainChilds": "    - [@apacheKafkaLicense]\n",
              "childs": [
                {
                  "content": ",[@apacheKafkaLicense]",
                  "plain": "[@apacheKafkaLicense]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Server Platforms": {
      "plain": "- Linux\n    - [@apacheKafkaServer]\n- OSX\n    - [@apacheKafkaServer]\n- Windows\n    - [@apacheKafkaServer]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Linux",
              "plain": "Linux\n",
              "plainChilds": "    - [@apacheKafkaServer]\n",
              "childs": [
                {
                  "content": ",[@apacheKafkaServer]",
                  "plain": "[@apacheKafkaServer]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            },
            {
              "content": "OSX",
              "plain": "OSX\n",
              "plainChilds": "    - [@apacheKafkaServer]\n",
              "childs": [
                {
                  "content": ",[@apacheKafkaServer]",
                  "plain": "[@apacheKafkaServer]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            },
            {
              "content": "Windows",
              "plain": "Windows\n",
              "plainChilds": "    - [@apacheKafkaServer]\n",
              "childs": [
                {
                  "content": ",[@apacheKafkaServer]",
                  "plain": "[@apacheKafkaServer]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Broker Backend": {
      "plain": "- None\n",
      "childs": {
        "0": [
          [
            {
              "content": "None",
              "plain": "None\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "JMS support": {
      "plain": "- No\n",
      "childs": {
        "0": [
          [
            {
              "content": "No",
              "plain": "No\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "Working example": {
      "plain": "- Yes\n    - [@apacheKafkaExample]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Yes",
              "plain": "Yes\n",
              "plainChilds": "    - [@apacheKafkaExample]\n",
              "childs": [
                {
                  "content": ",[@apacheKafkaExample]",
                  "plain": "[@apacheKafkaExample]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Google hits": {
      "plain": "- 562.000\n",
      "childs": {
        "0": [
          [
            {
              "content": "562.000",
              "plain": "562.000\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    }
  },
  {
    "tag": "Apache Qpid - http://qpid.apache.org/",
    "descr": "Apache Qpid™ makes messaging tools that speak AMQP and support many languages and platforms.",
    "Description": {
      "plain": "Apache Qpid™ makes messaging tools that speak AMQP and support many languages and platforms.",
      "childs": {
        "0": [
          "Apache Qpid™ makes messaging tools that speak AMQP and support many languages and platforms."
        ]
      }
    },
    "Repo": {
      "plain": "- https://github.com/apache/qpid\n",
      "childs": {
        "0": [
          [
            {
              "content": "https://github.com/apache/qpid",
              "plain": "https://github.com/apache/qpid\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "License": {
      "plain": "- Apache 2.0\n    - [@apacheQpidLicense]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Apache 2.0",
              "plain": "Apache 2.0\n",
              "plainChilds": "    - [@apacheQpidLicense]\n",
              "childs": [
                {
                  "content": ",[@apacheQpidLicense]",
                  "plain": "[@apacheQpidLicense]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Server Platforms": {
      "plain": "- Linux\n    - [@apacheQpidServer]\n- Windows\n    - [@apacheQpidServer]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Linux",
              "plain": "Linux\n",
              "plainChilds": "    - [@apacheQpidServer]\n",
              "childs": [
                {
                  "content": ",[@apacheQpidServer]",
                  "plain": "[@apacheQpidServer]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            },
            {
              "content": "Windows",
              "plain": "Windows\n",
              "plainChilds": "    - [@apacheQpidServer]\n",
              "childs": [
                {
                  "content": ",[@apacheQpidServer]",
                  "plain": "[@apacheQpidServer]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Protocol": {
      "plain": "- AMQP\n    - [@apacheQpiProtocols]\n",
      "childs": {
        "0": [
          [
            {
              "content": "AMQP",
              "plain": "AMQP\n",
              "plainChilds": "    - [@apacheQpiProtocols]\n",
              "childs": [
                {
                  "content": ",[@apacheQpiProtocols]",
                  "plain": "[@apacheQpiProtocols]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Broker Backend": {
      "plain": "- None\n",
      "childs": {
        "0": [
          [
            {
              "content": "None",
              "plain": "None\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "JMS support": {
      "plain": "- Yes\n    - [@apacheQpidJMS]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Yes",
              "plain": "Yes\n",
              "plainChilds": "    - [@apacheQpidJMS]\n",
              "childs": [
                {
                  "content": ",[@apacheQpidJMS]",
                  "plain": "[@apacheQpidJMS]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Working example": {
      "plain": "- Yes\n    - [@apacheQpidJMSExamples]\n    - [@apacheQpidCPPExamples]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Yes",
              "plain": "Yes\n",
              "plainChilds": "    - [@apacheQpidJMSExamples]\n    - [@apacheQpidCPPExamples]\n",
              "childs": [
                {
                  "content": ",[@apacheQpidJMSExamples]",
                  "plain": "[@apacheQpidJMSExamples]\n    ",
                  "plainChilds": "",
                  "childs": []
                },
                {
                  "content": ",[@apacheQpidCPPExamples]",
                  "plain": "[@apacheQpidCPPExamples]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Google hits": {
      "plain": "- 690.000\n",
      "childs": {
        "0": [
          [
            {
              "content": "690.000",
              "plain": "690.000\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    }
  },
  {
    "tag": "Beanstalkd - https://kr.github.io/beanstalkd/",
    "descr": "Beanstalk is a simple, fast work queue.",
    "Description": {
      "plain": "Beanstalk is a simple, fast work queue.\n\nIts interface is generic, but was originally designed for reducing the latency of page views in high-volume web applications by running time-consuming tasks asynchronously.",
      "childs": {
        "0": [
          "Beanstalk is a simple, fast work queue.",
          "Its interface is generic, but was originally designed for reducing the latency of page views in high-volume web applications by running time-consuming tasks asynchronously."
        ]
      }
    },
    "Repo": {
      "plain": "- https://github.com/kr/beanstalkd\n",
      "childs": {
        "0": [
          [
            {
              "content": "https://github.com/kr/beanstalkd",
              "plain": "https://github.com/kr/beanstalkd\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "License": {
      "plain": "- MIT\n    - [@beanstalkdLicense]\n",
      "childs": {
        "0": [
          [
            {
              "content": "MIT",
              "plain": "MIT\n",
              "plainChilds": "    - [@beanstalkdLicense]\n",
              "childs": [
                {
                  "content": ",[@beanstalkdLicense]",
                  "plain": "[@beanstalkdLicense]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Server Platforms": {
      "plain": "- Linux\n    - [@beanstalkdServer]\n- OSX\n    - [@beanstalkdServer]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Linux",
              "plain": "Linux\n",
              "plainChilds": "    - [@beanstalkdServer]\n",
              "childs": [
                {
                  "content": ",[@beanstalkdServer]",
                  "plain": "[@beanstalkdServer]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            },
            {
              "content": "OSX",
              "plain": "OSX\n",
              "plainChilds": "    - [@beanstalkdServer]\n",
              "childs": [
                {
                  "content": ",[@beanstalkdServer]",
                  "plain": "[@beanstalkdServer]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Protocol": {
      "plain": "- Beanstalkd\n    - [@beanstalkdProtocols]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Beanstalkd",
              "plain": "Beanstalkd\n",
              "plainChilds": "    - [@beanstalkdProtocols]\n",
              "childs": [
                {
                  "content": ",[@beanstalkdProtocols]",
                  "plain": "[@beanstalkdProtocols]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Working example": {
      "plain": "- No\n",
      "childs": {
        "0": [
          [
            {
              "content": "No",
              "plain": "No\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "JMS support": {
      "plain": "- No\n",
      "childs": {
        "0": [
          [
            {
              "content": "No",
              "plain": "No\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "Broker Backend": {
      "plain": "- None\n",
      "childs": {
        "0": [
          [
            {
              "content": "None",
              "plain": "None\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "Google hits": {
      "plain": "- 151.000\n",
      "childs": {
        "0": [
          [
            {
              "content": "151.000",
              "plain": "151.000\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    }
  },
  {
    "tag": "Celery - http://www.celeryproject.org/",
    "descr": "Distributed Task Queue",
    "Description": {
      "plain": "Celery is an asynchronous task queue/job queue based on distributed message passing. It is focused on real-time operation, but supports scheduling as well.\nThe execution units, called tasks, are executed concurrently on a single or more worker servers using multiprocessing, Eventlet, or gevent. Tasks can execute asynchronously (in the background) or synchronously (wait until ready).\n\nCelery is used in production systems to process millions of tasks a day.",
      "childs": {
        "0": [
          "Celery is an asynchronous task queue/job queue based on distributed message passing. It is focused on real-time operation, but supports scheduling as well. The execution units, called tasks, are executed concurrently on a single or more worker servers using multiprocessing, Eventlet, or gevent. Tasks can execute asynchronously (in the background) or synchronously (wait until ready).",
          "Celery is used in production systems to process millions of tasks a day."
        ]
      }
    },
    "Repo": {
      "plain": "- https://github.com/celery/celery\n",
      "childs": {
        "0": [
          [
            {
              "content": "https://github.com/celery/celery",
              "plain": "https://github.com/celery/celery\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "License": {
      "plain": "- BSD-3-Clause\n    - [@celeryLicense]\n",
      "childs": {
        "0": [
          [
            {
              "content": "BSD-3-Clause",
              "plain": "BSD-3-Clause\n",
              "plainChilds": "    - [@celeryLicense]\n",
              "childs": [
                {
                  "content": ",[@celeryLicense]",
                  "plain": "[@celeryLicense]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Protocol": {
      "plain": "",
      "childs": {
        "0": [
          ""
        ]
      }
    },
    "Server Platforms": {
      "plain": "",
      "childs": {
        "0": [
          ""
        ]
      }
    },
    "Working example": {
      "plain": "- Yes\n    - [@celeryExamples]\n",
      "childs": {
        "0": [
          [
            {
              "content": "Yes",
              "plain": "Yes\n",
              "plainChilds": "    - [@celeryExamples]\n",
              "childs": [
                {
                  "content": ",[@celeryExamples]",
                  "plain": "[@celeryExamples]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "JMS support": {
      "plain": "- No\n",
      "childs": {
        "0": [
          [
            {
              "content": "No",
              "plain": "No\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    },
    "Broker Backend": {
      "plain": "- RabbitMQ\n    - [@celeryBackend]\n- Redis\n    - [@celeryBackend]\n",
      "childs": {
        "0": [
          [
            {
              "content": "RabbitMQ",
              "plain": "RabbitMQ\n",
              "plainChilds": "    - [@celeryBackend]\n",
              "childs": [
                {
                  "content": ",[@celeryBackend]",
                  "plain": "[@celeryBackend]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            },
            {
              "content": "Redis",
              "plain": "Redis\n",
              "plainChilds": "    - [@celeryBackend]\n",
              "childs": [
                {
                  "content": ",[@celeryBackend]",
                  "plain": "[@celeryBackend]\n",
                  "plainChilds": "",
                  "childs": []
                }
              ]
            }
          ]
        ]
      }
    },
    "Google hits": {
      "plain": "- 160.000\n",
      "childs": {
        "0": [
          [
            {
              "content": "160.000",
              "plain": "160.000\n",
              "plainChilds": "",
              "childs": []
            }
          ]
        ]
      }
    }
  }
]